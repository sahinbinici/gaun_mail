# Docker Profile Configuration for ProlizWebServices
# This profile is used when running in Docker containers

# Server configuration
server.port=8083
server.servlet.context-path=/ProlizWebServices

# Logging Configuration
logging.level.com.prolizwebservices=${LOG_LEVEL_APP:INFO}
logging.level.com.prolizwebservices.client=${LOG_LEVEL_CLIENT:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:WARN}
logging.level.org.apache.http=${LOG_LEVEL_HTTP:WARN}
logging.level.root=WARN

# Log pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Log file configuration
logging.file.name=/app/logs/proliz-web-services.log
logging.file.max-size=10MB
logging.file.max-history=30

# Connection timeout settings
spring.mvc.async.request-timeout=30000

# SOAP Service Configuration
soap.service.username=${SOAP_SERVICE_USERNAME:ProLmsGan}
soap.service.password=${SOAP_SERVICE_PASSWORD:-2020+Pro*Gan#}
soap.service.url=${SOAP_SERVICE_URL:https://obs.gantep.edu.tr/proliz_obs_lms_miner/proliz_obs_lms_miner.asmx}
soap.service.timeout.connect=${SOAP_TIMEOUT_CONNECT:10000}
soap.service.timeout.read=${SOAP_TIMEOUT_READ:30000}
soap.service.retry.enabled=${SOAP_RETRY_ENABLED:true}
soap.service.retry.max-attempts=${SOAP_RETRY_MAX:3}

# Cache Performans Ayarları
cache.preload.initial-courses=${CACHE_INITIAL:100}
cache.progressive.enabled=${CACHE_PROGRESSIVE:true}
cache.progressive.batch-size=${CACHE_BATCH_SIZE:50}
cache.progressive.interval-minutes=${CACHE_INTERVAL:5}
cache.progressive.rate-limit-ms=${CACHE_RATE_LIMIT:30}
cache.progressive.max-errors=${CACHE_MAX_ERRORS:20}

# Async/Paralel İşlem Ayarları
async.soap.core-pool-size=${ASYNC_SOAP_CORE:10}
async.soap.max-pool-size=${ASYNC_SOAP_MAX:25}
async.soap.queue-capacity=${ASYNC_SOAP_QUEUE:100}
async.soap.keep-alive-seconds=${ASYNC_SOAP_KEEPALIVE:60}

# SSL/TLS Güvenlik Ayarları
server.ssl.enabled=false

# SpringDoc OpenAPI (Swagger) Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.displayRequestDuration=true
springdoc.swagger-ui.defaultModelsExpandDepth=1
springdoc.swagger-ui.defaultModelExpandDepth=1
springdoc.swagger-ui.displayOperationId=false

# Content Negotiation
spring.mvc.contentnegotiation.favor-parameter=false
spring.mvc.contentnegotiation.favor-path-extension=false
spring.mvc.contentnegotiation.media-types.xml=application/xml
spring.mvc.contentnegotiation.media-types.json=application/json

# ============================================
# HYBRID CACHE CONFIGURATION (Redis + Disk + Database)
# ============================================

# Redis Configuration (Docker service)
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=${REDIS_TIMEOUT:60000}
spring.data.redis.jedis.pool.max-active=20
spring.data.redis.jedis.pool.max-idle=10
spring.data.redis.jedis.pool.min-idle=5

# Cache Strategy Configuration
cache.strategy.redis.enabled=${CACHE_REDIS_ENABLED:true}
cache.strategy.disk.enabled=${CACHE_DISK_ENABLED:true}
cache.strategy.database.enabled=${CACHE_DB_ENABLED:true}

# Cache TTL Settings (in seconds)
cache.ttl.soap-response=${CACHE_TTL_SOAP:86400}
cache.ttl.ders-list=${CACHE_TTL_DERS:3600}
cache.ttl.ogrenci-list=${CACHE_TTL_OGRENCI:1800}
cache.ttl.ogretim-elemani=${CACHE_TTL_OGRETIM:7200}

# Disk Cache Configuration
cache.disk.directory=${CACHE_DISK_DIR:/app/cache}
cache.disk.max-size-mb=${CACHE_DISK_MAX_SIZE:500}

# MySQL Database Configuration (Docker service)
spring.datasource.url=${DATABASE_URL:jdbc:mysql://mysql:3306/proliz_cache?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Europe/Istanbul&characterEncoding=UTF-8}
spring.datasource.driverClassName=${DATABASE_DRIVER:com.mysql.cj.jdbc.Driver}
spring.datasource.username=${DATABASE_USERNAME:proliz}
spring.datasource.password=${DATABASE_PASSWORD:proliz_password_change_me}

# JPA Configuration for MySQL
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=${JPA_DIALECT:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# MySQL specific optimizations
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.query.in_clause_parameter_padding=true
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true
spring.jpa.properties.hibernate.query.plan_cache_max_size=4096

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=false

# H2 Console (Disabled in Docker)
spring.h2.console.enabled=false

# Cache Refresh Strategy
cache.refresh.auto-enabled=${CACHE_AUTO_REFRESH:true}
cache.refresh.cron=${CACHE_REFRESH_CRON:0 0 2 * * ?}
cache.refresh.on-startup=${CACHE_REFRESH_STARTUP:true}
